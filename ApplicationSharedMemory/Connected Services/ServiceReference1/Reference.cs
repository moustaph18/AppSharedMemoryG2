//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApplicationSharedMemory.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/MetierSharedMemory")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Personne", Namespace="http://schemas.datacontract.org/2004/07/MetierSharedMemory.Model")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ApplicationSharedMemory.ServiceReference1.Encadreur))]
    public partial class Personne : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPersonneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrenomField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPersonne {
            get {
                return this.IdPersonneField;
            }
            set {
                if ((this.IdPersonneField.Equals(value) != true)) {
                    this.IdPersonneField = value;
                    this.RaisePropertyChanged("IdPersonne");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nom {
            get {
                return this.NomField;
            }
            set {
                if ((object.ReferenceEquals(this.NomField, value) != true)) {
                    this.NomField = value;
                    this.RaisePropertyChanged("Nom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prenom {
            get {
                return this.PrenomField;
            }
            set {
                if ((object.ReferenceEquals(this.PrenomField, value) != true)) {
                    this.PrenomField = value;
                    this.RaisePropertyChanged("Prenom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Encadreur", Namespace="http://schemas.datacontract.org/2004/07/MetierSharedMemory.Model")]
    [System.SerializableAttribute()]
    public partial class Encadreur : ApplicationSharedMemory.ServiceReference1.Personne {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecialiteField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specialite {
            get {
                return this.SpecialiteField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecialiteField, value) != true)) {
                    this.SpecialiteField = value;
                    this.RaisePropertyChanged("Specialite");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListItems", Namespace="http://schemas.datacontract.org/2004/07/MetierSharedMemory.Model")]
    [System.SerializableAttribute()]
    public partial class ListItems : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Memoire", Namespace="http://schemas.datacontract.org/2004/07/MetierSharedMemory.Model")]
    [System.SerializableAttribute()]
    public partial class Memoire : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnneeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdEncadreurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdMemoireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SujetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ApplicationSharedMemory.ServiceReference1.Encadreur encadreurField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Annee {
            get {
                return this.AnneeField;
            }
            set {
                if ((this.AnneeField.Equals(value) != true)) {
                    this.AnneeField = value;
                    this.RaisePropertyChanged("Annee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdEncadreur {
            get {
                return this.IdEncadreurField;
            }
            set {
                if ((this.IdEncadreurField.Equals(value) != true)) {
                    this.IdEncadreurField = value;
                    this.RaisePropertyChanged("IdEncadreur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdMemoire {
            get {
                return this.IdMemoireField;
            }
            set {
                if ((this.IdMemoireField.Equals(value) != true)) {
                    this.IdMemoireField = value;
                    this.RaisePropertyChanged("IdMemoire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sujet {
            get {
                return this.SujetField;
            }
            set {
                if ((object.ReferenceEquals(this.SujetField, value) != true)) {
                    this.SujetField = value;
                    this.RaisePropertyChanged("Sujet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ApplicationSharedMemory.ServiceReference1.Encadreur encadreur {
            get {
                return this.encadreurField;
            }
            set {
                if ((object.ReferenceEquals(this.encadreurField, value) != true)) {
                    this.encadreurField = value;
                    this.RaisePropertyChanged("encadreur");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MemoireViewModel", Namespace="http://schemas.datacontract.org/2004/07/MetierSharedMemory.Model")]
    [System.SerializableAttribute()]
    public partial class MemoireViewModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnneeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EncadreurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdEncadreurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdMemoireField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SujetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Annee {
            get {
                return this.AnneeField;
            }
            set {
                if ((this.AnneeField.Equals(value) != true)) {
                    this.AnneeField = value;
                    this.RaisePropertyChanged("Annee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Encadreur {
            get {
                return this.EncadreurField;
            }
            set {
                if ((object.ReferenceEquals(this.EncadreurField, value) != true)) {
                    this.EncadreurField = value;
                    this.RaisePropertyChanged("Encadreur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdEncadreur {
            get {
                return this.IdEncadreurField;
            }
            set {
                if ((this.IdEncadreurField.Equals(value) != true)) {
                    this.IdEncadreurField = value;
                    this.RaisePropertyChanged("IdEncadreur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdMemoire {
            get {
                return this.IdMemoireField;
            }
            set {
                if ((this.IdMemoireField.Equals(value) != true)) {
                    this.IdMemoireField = value;
                    this.RaisePropertyChanged("IdMemoire");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sujet {
            get {
                return this.SujetField;
            }
            set {
                if ((object.ReferenceEquals(this.SujetField, value) != true)) {
                    this.SujetField = value;
                    this.RaisePropertyChanged("Sujet");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        ApplicationSharedMemory.ServiceReference1.CompositeType GetDataUsingDataContract(ApplicationSharedMemory.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(ApplicationSharedMemory.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AjoutEncadreur", ReplyAction="http://tempuri.org/IService1/AjoutEncadreurResponse")]
        bool AjoutEncadreur(ApplicationSharedMemory.ServiceReference1.Encadreur encadreur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AjoutEncadreur", ReplyAction="http://tempuri.org/IService1/AjoutEncadreurResponse")]
        System.Threading.Tasks.Task<bool> AjoutEncadreurAsync(ApplicationSharedMemory.ServiceReference1.Encadreur encadreur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/encadreurById", ReplyAction="http://tempuri.org/IService1/encadreurByIdResponse")]
        ApplicationSharedMemory.ServiceReference1.Encadreur encadreurById(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/encadreurById", ReplyAction="http://tempuri.org/IService1/encadreurByIdResponse")]
        System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.Encadreur> encadreurByIdAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ModifierEncadreur", ReplyAction="http://tempuri.org/IService1/ModifierEncadreurResponse")]
        bool ModifierEncadreur(ApplicationSharedMemory.ServiceReference1.Encadreur encadreur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ModifierEncadreur", ReplyAction="http://tempuri.org/IService1/ModifierEncadreurResponse")]
        System.Threading.Tasks.Task<bool> ModifierEncadreurAsync(ApplicationSharedMemory.ServiceReference1.Encadreur encadreur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SupprimerEncadreur", ReplyAction="http://tempuri.org/IService1/SupprimerEncadreurResponse")]
        bool SupprimerEncadreur(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SupprimerEncadreur", ReplyAction="http://tempuri.org/IService1/SupprimerEncadreurResponse")]
        System.Threading.Tasks.Task<bool> SupprimerEncadreurAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListEncadreur", ReplyAction="http://tempuri.org/IService1/ListEncadreurResponse")]
        ApplicationSharedMemory.ServiceReference1.Encadreur[] ListEncadreur();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListEncadreur", ReplyAction="http://tempuri.org/IService1/ListEncadreurResponse")]
        System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.Encadreur[]> ListEncadreurAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListEncadreurs", ReplyAction="http://tempuri.org/IService1/ListEncadreursResponse")]
        ApplicationSharedMemory.ServiceReference1.Encadreur[] ListEncadreurs(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListEncadreurs", ReplyAction="http://tempuri.org/IService1/ListEncadreursResponse")]
        System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.Encadreur[]> ListEncadreursAsync(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChargementComboBox", ReplyAction="http://tempuri.org/IService1/ChargementComboBoxResponse")]
        ApplicationSharedMemory.ServiceReference1.ListItems[] ChargementComboBox();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChargementComboBox", ReplyAction="http://tempuri.org/IService1/ChargementComboBoxResponse")]
        System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.ListItems[]> ChargementComboBoxAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AjoutMemoire", ReplyAction="http://tempuri.org/IService1/AjoutMemoireResponse")]
        bool AjoutMemoire(ApplicationSharedMemory.ServiceReference1.Memoire memoire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AjoutMemoire", ReplyAction="http://tempuri.org/IService1/AjoutMemoireResponse")]
        System.Threading.Tasks.Task<bool> AjoutMemoireAsync(ApplicationSharedMemory.ServiceReference1.Memoire memoire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ModifierMemoire", ReplyAction="http://tempuri.org/IService1/ModifierMemoireResponse")]
        bool ModifierMemoire(ApplicationSharedMemory.ServiceReference1.Memoire memoire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ModifierMemoire", ReplyAction="http://tempuri.org/IService1/ModifierMemoireResponse")]
        System.Threading.Tasks.Task<bool> ModifierMemoireAsync(ApplicationSharedMemory.ServiceReference1.Memoire memoire);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SupprimerMemoire", ReplyAction="http://tempuri.org/IService1/SupprimerMemoireResponse")]
        bool SupprimerMemoire(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SupprimerMemoire", ReplyAction="http://tempuri.org/IService1/SupprimerMemoireResponse")]
        System.Threading.Tasks.Task<bool> SupprimerMemoireAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListMemoires", ReplyAction="http://tempuri.org/IService1/ListMemoiresResponse")]
        ApplicationSharedMemory.ServiceReference1.Memoire[] ListMemoires();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListMemoires", ReplyAction="http://tempuri.org/IService1/ListMemoiresResponse")]
        System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.Memoire[]> ListMemoiresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MemoireById", ReplyAction="http://tempuri.org/IService1/MemoireByIdResponse")]
        ApplicationSharedMemory.ServiceReference1.Memoire MemoireById(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MemoireById", ReplyAction="http://tempuri.org/IService1/MemoireByIdResponse")]
        System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.Memoire> MemoireByIdAsync(System.Nullable<int> id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListMemorieParCh", ReplyAction="http://tempuri.org/IService1/ListMemorieParChResponse")]
        ApplicationSharedMemory.ServiceReference1.Memoire[] ListMemorieParCh(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ListMemorieParCh", ReplyAction="http://tempuri.org/IService1/ListMemorieParChResponse")]
        System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.Memoire[]> ListMemorieParChAsync(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMemoireViewModels", ReplyAction="http://tempuri.org/IService1/GetMemoireViewModelsResponse")]
        ApplicationSharedMemory.ServiceReference1.MemoireViewModel[] GetMemoireViewModels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMemoireViewModels", ReplyAction="http://tempuri.org/IService1/GetMemoireViewModelsResponse")]
        System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.MemoireViewModel[]> GetMemoireViewModelsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ApplicationSharedMemory.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ApplicationSharedMemory.ServiceReference1.IService1>, ApplicationSharedMemory.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ApplicationSharedMemory.ServiceReference1.CompositeType GetDataUsingDataContract(ApplicationSharedMemory.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(ApplicationSharedMemory.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public bool AjoutEncadreur(ApplicationSharedMemory.ServiceReference1.Encadreur encadreur) {
            return base.Channel.AjoutEncadreur(encadreur);
        }
        
        public System.Threading.Tasks.Task<bool> AjoutEncadreurAsync(ApplicationSharedMemory.ServiceReference1.Encadreur encadreur) {
            return base.Channel.AjoutEncadreurAsync(encadreur);
        }
        
        public ApplicationSharedMemory.ServiceReference1.Encadreur encadreurById(System.Nullable<int> id) {
            return base.Channel.encadreurById(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.Encadreur> encadreurByIdAsync(System.Nullable<int> id) {
            return base.Channel.encadreurByIdAsync(id);
        }
        
        public bool ModifierEncadreur(ApplicationSharedMemory.ServiceReference1.Encadreur encadreur) {
            return base.Channel.ModifierEncadreur(encadreur);
        }
        
        public System.Threading.Tasks.Task<bool> ModifierEncadreurAsync(ApplicationSharedMemory.ServiceReference1.Encadreur encadreur) {
            return base.Channel.ModifierEncadreurAsync(encadreur);
        }
        
        public bool SupprimerEncadreur(System.Nullable<int> id) {
            return base.Channel.SupprimerEncadreur(id);
        }
        
        public System.Threading.Tasks.Task<bool> SupprimerEncadreurAsync(System.Nullable<int> id) {
            return base.Channel.SupprimerEncadreurAsync(id);
        }
        
        public ApplicationSharedMemory.ServiceReference1.Encadreur[] ListEncadreur() {
            return base.Channel.ListEncadreur();
        }
        
        public System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.Encadreur[]> ListEncadreurAsync() {
            return base.Channel.ListEncadreurAsync();
        }
        
        public ApplicationSharedMemory.ServiceReference1.Encadreur[] ListEncadreurs(string text) {
            return base.Channel.ListEncadreurs(text);
        }
        
        public System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.Encadreur[]> ListEncadreursAsync(string text) {
            return base.Channel.ListEncadreursAsync(text);
        }
        
        public ApplicationSharedMemory.ServiceReference1.ListItems[] ChargementComboBox() {
            return base.Channel.ChargementComboBox();
        }
        
        public System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.ListItems[]> ChargementComboBoxAsync() {
            return base.Channel.ChargementComboBoxAsync();
        }
        
        public bool AjoutMemoire(ApplicationSharedMemory.ServiceReference1.Memoire memoire) {
            return base.Channel.AjoutMemoire(memoire);
        }
        
        public System.Threading.Tasks.Task<bool> AjoutMemoireAsync(ApplicationSharedMemory.ServiceReference1.Memoire memoire) {
            return base.Channel.AjoutMemoireAsync(memoire);
        }
        
        public bool ModifierMemoire(ApplicationSharedMemory.ServiceReference1.Memoire memoire) {
            return base.Channel.ModifierMemoire(memoire);
        }
        
        public System.Threading.Tasks.Task<bool> ModifierMemoireAsync(ApplicationSharedMemory.ServiceReference1.Memoire memoire) {
            return base.Channel.ModifierMemoireAsync(memoire);
        }
        
        public bool SupprimerMemoire(System.Nullable<int> id) {
            return base.Channel.SupprimerMemoire(id);
        }
        
        public System.Threading.Tasks.Task<bool> SupprimerMemoireAsync(System.Nullable<int> id) {
            return base.Channel.SupprimerMemoireAsync(id);
        }
        
        public ApplicationSharedMemory.ServiceReference1.Memoire[] ListMemoires() {
            return base.Channel.ListMemoires();
        }
        
        public System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.Memoire[]> ListMemoiresAsync() {
            return base.Channel.ListMemoiresAsync();
        }
        
        public ApplicationSharedMemory.ServiceReference1.Memoire MemoireById(System.Nullable<int> id) {
            return base.Channel.MemoireById(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.Memoire> MemoireByIdAsync(System.Nullable<int> id) {
            return base.Channel.MemoireByIdAsync(id);
        }
        
        public ApplicationSharedMemory.ServiceReference1.Memoire[] ListMemorieParCh(string text) {
            return base.Channel.ListMemorieParCh(text);
        }
        
        public System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.Memoire[]> ListMemorieParChAsync(string text) {
            return base.Channel.ListMemorieParChAsync(text);
        }
        
        public ApplicationSharedMemory.ServiceReference1.MemoireViewModel[] GetMemoireViewModels() {
            return base.Channel.GetMemoireViewModels();
        }
        
        public System.Threading.Tasks.Task<ApplicationSharedMemory.ServiceReference1.MemoireViewModel[]> GetMemoireViewModelsAsync() {
            return base.Channel.GetMemoireViewModelsAsync();
        }
    }
}
